name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: toy-backend
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: toy-backend
          path: ./artifacts

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy JAR to server
        run: |
          scp ./artifacts/*.jar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.SSH_USER }}/toy-backend/toy-backend.jar
          
      - name: Restart app on server
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.SERVER_IP }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              cd /home/${{ secrets.SSH_USER }}/toy-backend
              
              pkill -f 'java -jar.*toy-backend' || true
              sleep 5
              
              JAR_FILE=$(ls -t toy-backend-*.jar | head -n 1)
              echo "Found latest JAR: $JAR_FILE"
              
              echo "Starting $JAR_FILE..."
              nohup java -jar $JAR_FILE > app.log 2>&1 &
              
              echo "Waiting 20 seconds for app to start..."
              sleep 20
              
              if pgrep -f "$JAR_FILE" > /dev/null; then
                echo "✅ Application started successfully!"
              else
                echo "❌ Failed to start application."
                echo "--- Displaying logs from app.log ---"
                tail -n 30 app.log
                exit 1
              fi